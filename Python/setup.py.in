try:
    from setuptools import setup,Extension
except ImportError:
    from distutils.core import setup,Extension
import os
import glob
import sys

#Parse settings from CMake
includeDirs = """${KLAMPT_INCLUDE_DIRS}""".split(';')
libs = """${KLAMPT_ABSOLUTE_LIBRARIES}""".split(';')
defs = """${KLAMPT_DEFINITIONS}""".split(';')

#Parse libraries
libdirs = []
libnames = []
for l in libs:
	path,fn = os.path.split(l)
	if len(path)>0 and path not in libdirs:
		libdirs.append(path)
	if fn.startswith('lib'):
		name = fn.split('.')[0]
		libnames.append(name[3:])
	elif fn.endswith('lib'):
		name = fn.split('.')[0]
		libnames.append(name)
libs = libnames

#Parse definitions
commondefines = []
#split whitespace
defs = sum([d.split() for d in defs],[])
#parse -D or -I defines
for d in defs:
	if d.startswith("-I"):
		includeDirs.append(d[2:])
	elif d.startswith("-D"):
		d = d[2:]
		if d.find("=") >= 0:
			commondefines.append(tuple(d.split("=")))
		else:
			commondefines.append((d,None))
	else:
		commondefines.append((d,None))

commonfiles = ['pyerr.cpp']
rssourcefiles = commonfiles + ['robotsim.cpp','robotik.cpp','robotsim_wrap.cxx']
mpsourcefiles = commonfiles + ['motionplanning.cpp','motionplanning_wrap.cxx']
rfsourcefiles = commonfiles + ['rootfind.cpp','pyvectorfield.cpp','rootfind_wrap.cxx']

extra_link_args = []
if sys.platform == 'darwin':
  extra_link_args = ['-framework', 'OpenGL']

setup(name='Klampt',
      version='@KLAMPT_VERSION@',
      description="PyKlamp't",
      author='Kris Hauser',
      author_email='kris.hauser@duke.edu',
      url='https://github.com/krishauser/Klampt',
      ext_modules=[Extension('klampt._robotsim',
                             [os.path.join('klampt/src',f) for f in rssourcefiles],
                             include_dirs=includeDirs,
                             define_macros=commondefines,
                             library_dirs=libdirs,
                             libraries=libs,
                             extra_link_args=extra_link_args,
                             language='c++'),
                   Extension('klampt.plan._motionplanning',
                             [os.path.join('klampt/src',f) for f in mpsourcefiles],
                             include_dirs=includeDirs,
                             define_macros=commondefines,
                             library_dirs=libdirs,
                             libraries=libs,
                             extra_link_args=extra_link_args,
                             language='c++'),
                   Extension('klampt.math._rootfind',
                             [os.path.join('klampt/src',f) for f in rfsourcefiles],
                             include_dirs=includeDirs,
                             define_macros=commondefines,
                             library_dirs=libdirs,
                             libraries=libs,
                             extra_link_args=extra_link_args,
                             language='c++'),
                   ],
      py_modules=['klampt.robotsim','klampt.plan.motionplanning','klampt.math.rootfind'],
      packages=['klampt','klampt.io', 'klampt.math', 'klampt.model', 'klampt.plan', 'klampt.sim', 'klampt.vis'],
      package_dir={'klampt': 'klampt'},
      package_data={'klampt': ['data/*.html']}
     )

